配置文件
app/config/database.php


'redis' => array(

    'cluster' => true,

    'default' => array('host' => '127.0.0.1', 'port' => 6379),

),

cluster 选项会让 Laravel 的 Redis 客户端在所有 Redis 节点间执行客户端分片（ client-side sharding ），让您建立节点池，并因此拥有大量的 RAM 可用。然而，客户端分片的节点不能执行容错转移；因此，这主要适合用可以从另一台主要数据储存库取得的缓存数据


如果您的 Redis 服务器需要认证，您可以在 Redis 服务器配置文件里加入 password 参数设定。

获取 Redis 实例
$redis = Redis::connection();

$redis = Redis::connection('other');

Laravel 使用魔术方法传递命令到服务器
$redis->set('name', 'Taylor');

$name = $redis->get('name');

$values = $redis->lrange('names', 5, 10);


对默认redis服务器下命令 省去 connection()
Redis::set('name', 'Taylor');

$name = Redis::get('name');

$values = Redis::lrange('names', 5, 10);


想要一次发送很多命令到服务器时可以使用管道。使用 pipeline 方法：
发送多个命令到服务器

Redis::pipeline(function($pipe)
{
    for ($i = 0; $i < 1000; $i++)
    {
        $pipe->set("key:$i", $i);
    }
});